{"version":3,"sources":["src/fetch_helpers.ts","src/bufferreader.ts","src/midi_utils.ts","src/parse_midi_binary.ts","index.ts"],"names":[],"mappings":"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","file":"webdaw-modules.77de5100.js","sourceRoot":"..","sourcesContent":["// fetch helpers\n\nexport function status(response: Response): Promise<Response> {\n  if (response.status >= 200 && response.status < 300) {\n    return Promise.resolve(response)\n  }\n  return Promise.reject(new Error(response.statusText))\n\n}\n\nexport function json(response: Response): Promise<JSON> {\n  return response.json()\n}\n\nexport function arrayBuffer(response: Response): Promise<ArrayBuffer> {\n  return response.arrayBuffer()\n}\n\n\nexport function fetchJSON(url: string): Promise<JSON> {\n  return new Promise((resolve, reject) => {\n    // fetch(url, {\n    //   mode: 'no-cors'\n    // })\n    fetch(url)\n      .then(status)\n      .then(json)\n      .then(data => {\n        resolve(data)\n      })\n      .catch(e => {\n        reject(e)\n      })\n  })\n}\n\nexport async function fetchArraybuffer(url: string): Promise<ArrayBuffer> {\n  console.log('fectch ab', url);\n  const response = await fetch(url)\n  const response_1 = await status(response)\n  return arrayBuffer(response_1)\n}\n","// from: https://github.com/pravdomil/jasmid.ts\n\nexport class BufferReader {\n  private position: number\n  private data: DataView\n\n  constructor(buffer: ArrayBufferLike) {\n    this.position = 0\n    this.data = new DataView(buffer)\n  }\n\n  read(length: number) {\n    const value = this.data.buffer.slice(this.position, this.position + length)\n    this.position += length\n    return value\n  }\n\n  int8() {\n    const value = this.data.getInt8(this.position)\n    this.position += 1\n    return value\n  }\n\n  uint8() {\n    const value = this.data.getUint8(this.position)\n    this.position += 1\n    return value\n  }\n\n  uint16() {\n    const value = this.data.getUint16(this.position)\n    this.position += 2\n    return value\n  }\n\n  uint32() {\n    const value = this.data.getUint32(this.position)\n    this.position += 4\n    return value\n  }\n\n  string(length: number) {\n    return new TextDecoder(\"ascii\").decode(this.read(length))\n  }\n\n  eof() {\n    return this.position >= this.data.byteLength\n  }\n\n  /**\n   * Read a MIDI-style variable-length integer.\n   * (big-endian value in groups of 7 bits, with top bit set to signify that another byte follows)\n   */\n  midiInt() {\n    let result = 0\n    while (true) {\n      const value = this.uint8()\n      if (value & 0b10000000) {\n        result += value & 0b1111111\n        result <<= 7\n      } else {\n        return result + value\n      }\n    }\n  }\n\n  midiChunk() {\n    const id = this.string(4)\n    const length = this.uint32()\n    const data = this.read(length)\n    return { id, length, data }\n  }\n}\n","import { MidiEvent } from '../midi_events';\n\nexport const SEQUENCE_NUMBER = 'sequence number';\nexport const TEXT = 'text';\nexport const COPYRIGHT_NOTICE = 'copyright notice';\nexport const TRACK_NAME = 'track name';\nexport const INSTRUMENT_NAME = 'instrument name';\nexport const LYRICS = 'lyrics';\nexport const MARKER = 'marker';\nexport const CUE_POINT = 'cue point';\nexport const CHANNEL_PREFIX = 'channel prefix';\nexport const END_OF_TRACK = 'end of track';\nexport const TEMPO = 'tempo';\nexport const SMPTE_OFFSET = 'smpte offset';\nexport const TIME_SIGNATURE = 'time signature';\nexport const KEY_SIGNATURE = 'key signature';\nexport const SEQUENCER_SPECIFIC = 'sequencer specific';\nexport const SYSTEM_EXCLUSIVE = 'system exclusive';\nexport const DIVIDED_SYSTEM_EXCLUSIVE = 'divided system exclusive';\nexport const NOTE_ON = 'note on';\nexport const NOTE_OFF = 'note off';\nexport const NOTE_AFTERTOUCH = 'note aftertouch';\nexport const CONTROLLER = 'controller';\nexport const PROGRAM_CHANGE = 'program change';\nexport const CHANNEL_AFTERTOUCH = 'channel aftertouch';\nexport const PITCH_BEND = 'pitch bend';\n\n\nconst descriptions: { [index: number]: { [index: number]: string } | string } = {\n  0xff: {\n    0x00: 'sequence number',\n    0x01: 'text',\n    0x02: 'copyright notice',\n    0x03: 'track name',\n    0x04: 'instrument name',\n    0x05: 'lyrics',\n    0x06: 'marker',\n    0x07: 'cue point',\n    0x20: 'channel prefix',\n    0x2f: 'end of track',\n    0x51: 'tempo',\n    0x54: 'smpte offset',\n    0x58: 'time signature',\n    0x59: 'key signature',\n    0x7f: 'sequencer specific',\n  },\n  0xf0: 'system exclusive',\n  0xf7: 'divided sysex',\n  0x80: 'note on',\n  0x90: 'note off',\n  0xa0: 'note aftertouch',\n  0xb0: 'controller',\n  0xc0: 'program change',\n  0xd0: 'channel aftertouch',\n  0xe0: 'pitch bend',\n}\n\nexport const noteNames = {\n  'sharp': ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\n  'flat': ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'],\n  'enharmonic-sharp': ['B#', 'C#', 'C##', 'D#', 'D##', 'E#', 'F#', 'F##', 'G#', 'G##', 'A#', 'A##'],\n  'enharmonic-flat': ['Dbb', 'Db', 'Ebb', 'Eb', 'Fb', 'Gbb', 'Gb', 'Abb', 'Ab', 'Bbb', 'Bb', 'Cb']\n};\n\nexport const getMidiEventDescription = (type: number, subType?: number): string => {\n  if (typeof subType === 'undefined') {\n    return descriptions[type] as string;\n  }\n  return descriptions[type][subType] || 'undefined';\n}\n\nexport const getMidiMessageEvent = (event: MidiEvent): number[] => {\n  switch (event.descr) {\n    case NOTE_ON:\n      return [0x90 + event.channel, event.noteNumber, event.velocity]\n    case NOTE_OFF:\n      return [0x80 + event.channel, event.noteNumber, event.velocity]\n  }\n  return [0];\n}\n\nexport const getNoteNumber = (name: string, octave: number, mode: string = 'sharp'): number => {\n  let index = -1;\n  const modes = Object.getOwnPropertyNames(noteNames);\n  for (let i = 0, maxi = modes.length; i < maxi; i++) {\n    const names = modes[i];\n    //console.log(key);\n    for (let j = 0, maxj = names.length; j < maxj; j++) {\n      if (mode[j] === name) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index === -1) {\n    return -1;\n  }\n\n  //number = (index + 12) + (octave * 12) + 12; // → in Cubase central C = C3 instead of C4\n  return (index + 12) + (octave * 12);// → midi standard + scientific naming, see: http://en.wikipedia.org/wiki/Middle_C and http://en.wikipedia.org/wiki/Scientific_pitch_notation\n};","// based on: https://github.com/pravdomil/jasmid.ts\n\n// import { BufferReader } from 'jasmid.ts';\nimport { BufferReader } from './bufferreader';\nimport { MidiEvent } from './midi_events';\nimport { SEQUENCE_NUMBER, TEXT, COPYRIGHT_NOTICE, TRACK_NAME, INSTRUMENT_NAME, LYRICS, MARKER, CUE_POINT, CHANNEL_PREFIX, END_OF_TRACK, TEMPO, SMPTE_OFFSET, TIME_SIGNATURE, KEY_SIGNATURE, SEQUENCER_SPECIFIC, SYSTEM_EXCLUSIVE, DIVIDED_SYSTEM_EXCLUSIVE, NOTE_ON, NOTE_OFF, NOTE_AFTERTOUCH, CONTROLLER, PROGRAM_CHANGE, CHANNEL_AFTERTOUCH, PITCH_BEND } from './midi_utils';\n\nconst playbackSpeed = 1;\n\nexport type ParsedData = {\n  event: any,\n  deltaTime: number,\n  bpm?: number,\n}\n\nexport function parseMidiFile(buffer: ArrayBufferLike) {\n  const reader = new BufferReader(buffer)\n\n  const header = parseHeader(reader)\n  const tracks = parseTracks(reader, header.ticksPerBeat)\n\n  return { header, tracks }\n}\n\nfunction parseHeader(reader: BufferReader) {\n  const headerChunk = reader.midiChunk()\n  if (headerChunk.id !== \"MThd\" || headerChunk.length !== 6) {\n    throw new Error('Bad .mid file, header not found');\n  }\n\n  const headerReader = new BufferReader(headerChunk.data)\n  const formatType = headerReader.uint16()\n  const trackCount = headerReader.uint16()\n  const timeDivision = headerReader.uint16()\n  if (timeDivision & 0x8000) {\n    throw new Error('Expressing time division in SMTPE frames is not supported yet');\n  }\n  const ticksPerBeat = timeDivision\n\n  return { formatType, trackCount, ticksPerBeat }\n}\n\nfunction parseTracks(reader: BufferReader, ppq: number) {\n  let tracks: MidiEvent[][] = []\n  while (!reader.eof()) {\n    const trackChunk = reader.midiChunk()\n\n    if (trackChunk.id !== \"MTrk\") {\n      throw new Error(`Unexpected chunk, expected MTrk, got ${trackChunk.id}`);\n    }\n\n    const trackTrack = new BufferReader(trackChunk.data)\n    let track: MidiEvent[] = []\n    let ticks = 0;\n    let millis = 0;\n    let millisPerTick = 0;\n    let lastTypeByte = null;\n    while (!trackTrack.eof()) {\n      let data = parseEvent(trackTrack, lastTypeByte)\n      const { event, deltaTime, bpm } = data;\n      ticks += deltaTime;\n      // console.log('TICKS', ticks);\n      if (bpm) {\n        millisPerTick = ((1 / playbackSpeed * 60) / bpm / ppq) * 1000;\n        // console.log(bpm, ppq, millisPerTick);\n      }\n      lastTypeByte = event.type[0];\n      millis = ticks * millisPerTick;\n      track = [...track, {\n        ...event,\n        ticks,\n        millis,\n      }]\n    }\n\n    tracks = [...tracks, track]\n  }\n  return tracks\n}\n\nfunction parseEvent(reader: BufferReader, lastTypeByte: number | null): ParsedData {\n  const deltaTime = reader.midiInt()\n  let typeByte = reader.uint8()\n\n  // meta events: 0xff\n  // system events: 0xf0, 0xf7\n  // midi events: all other bytes\n\n  if (typeByte === 0xff) {\n    const subTypeByte = reader.uint8()\n    const length = reader.midiInt()\n\n    switch (subTypeByte) {\n      // sequence number\n      case 0x00:\n        if (length !== 2) {\n          throw new Error(`Expected length for sequenceNumber event is 2, got ${length}`);\n        }\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: SEQUENCE_NUMBER,\n            number: reader.uint16(),\n          },\n          deltaTime,\n        }\n      // text\n      case 0x01:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: TEXT,\n            text: reader.string(length),\n          },\n          deltaTime,\n        }\n      // copyright\n      case 0x02:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: COPYRIGHT_NOTICE,\n            text: reader.string(length),\n          },\n          deltaTime,\n        }\n      // track name\n      case 0x03:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: TRACK_NAME,\n            text: reader.string(length),\n          },\n          deltaTime,\n        }\n      // instrument name\n      case 0x04:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: INSTRUMENT_NAME,\n            text: reader.string(length),\n          },\n          deltaTime,\n        }\n      // lyrics\n      case 0x05:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: LYRICS,\n            text: reader.string(length),\n          },\n          deltaTime,\n        }\n      // marker\n      case 0x06:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: MARKER,\n            text: reader.string(length),\n          },\n          deltaTime,\n        }\n      // cue point\n      case 0x07:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: CUE_POINT,\n            text: reader.string(length),\n          },\n          deltaTime,\n        }\n      // channel prefix\n      case 0x20:\n        if (length !== 1) {\n          throw new Error(`Expected length for midiChannelPrefix event is 1, got ${length}`);\n        }\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: CHANNEL_PREFIX,\n            channel: reader.uint8(),\n          },\n          deltaTime,\n        }\n      // end of track\n      case 0x2f:\n        if (length !== 0) {\n          throw new Error(`Expected length for endOfTrack event is 0, got ${length}`);\n        }\n        return {\n          event: {\n            descr: END_OF_TRACK,\n            type: [typeByte, subTypeByte],\n          },\n          deltaTime,\n        }\n      // tempo\n      case 0x51:\n        if (length !== 3) {\n          throw new Error(`Expected length for setTempo event is 3, got ${length}`);\n        }\n        const microsecondsPerBeat = (reader.uint8() << 16) + (reader.uint8() << 8) + reader.uint8();\n        const bpm = 60000000 / microsecondsPerBeat;\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: TEMPO,\n            bpm,\n          },\n          bpm,\n          deltaTime,\n        }\n      // smpte offset\n      case 0x54:\n        if (length != 5) {\n          throw new Error(`Expected length for smpteOffset event is 5, got ${length}`);\n        }\n        const hourByte = reader.uint8()\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: SMPTE_OFFSET,\n            frameRate: getFrameRate(hourByte),\n            hour: hourByte & 0x1f,\n            min: reader.uint8(),\n            sec: reader.uint8(),\n            frame: reader.uint8(),\n            subFrame: reader.uint8(),\n          },\n          deltaTime,\n        }\n      // time signature\n      case 0x58:\n        if (length != 4) {\n          throw new Error(`Expected length for timeSignature event is 4, got ${length}`);\n        }\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: TIME_SIGNATURE,\n            numerator: reader.uint8(),\n            denominator: Math.pow(2, reader.uint8()),\n            metronome: reader.uint8(),\n            thirtySeconds: reader.uint8(),\n          },\n          deltaTime,\n        }\n      // key signature\n      case 0x59:\n        if (length != 2) {\n          throw new Error(`Expected length for keySignature event is 2, got ${length}`);\n        }\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: KEY_SIGNATURE,\n            key: reader.int8(),\n            scale: reader.uint8(),\n          },\n          deltaTime,\n        }\n      // sequencer specific\n      case 0x7f:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: SEQUENCER_SPECIFIC,\n            data: reader.read(length),\n          },\n          deltaTime,\n        }\n      // undefined\n      default:\n        return {\n          event: {\n            type: [typeByte, subTypeByte],\n            descr: 'undefined',\n            data: reader.read(length),\n          },\n          deltaTime,\n        }\n    }\n  } else if (typeByte === 0xf0) {\n    // system exclusive\n    const length = reader.midiInt()\n    return {\n      event: {\n        type: [0xf0],\n        descr: SYSTEM_EXCLUSIVE,\n        data: reader.read(length),\n      },\n      deltaTime,\n    }\n  } else if (typeByte === 0xf7) {\n    // divided system exclusive\n    const length = reader.midiInt()\n    return {\n      event: {\n        type: [0xf0],\n        descr: DIVIDED_SYSTEM_EXCLUSIVE,\n        data: reader.read(length),\n      },\n      deltaTime,\n    }\n  } else {\n    /**\n     * running status - reuse lastEventTypeByte as the event type\n     * typeByte is actually the first parameter\n     */\n    const isRunningStatus = (typeByte & 0b10000000) === 0\n    const value = isRunningStatus ? typeByte : reader.uint8()\n    typeByte = isRunningStatus ? (lastTypeByte === null ? 0 : lastTypeByte) : typeByte\n\n    // console.log(isRunningStatus, typeByte, value);\n\n    const channel = typeByte & 0x0f\n\n    switch (typeByte) {\n      // note on\n      case 0x80:\n        return {\n          event: {\n            type: [typeByte],\n            descr: NOTE_ON,\n            channel,\n            note: value,\n            velocity: reader.uint8(),\n          },\n          deltaTime,\n        }\n      // note off\n      case 0x90:\n        const velocity = reader.uint8()\n        return {\n          event: {\n            type: [velocity === 0 ? 0x90 : 0x80],\n            descr: NOTE_OFF,\n            channel,\n            note: value,\n            velocity,\n          },\n          deltaTime,\n        }\n      // note aftertouch\n      case 0xa0:\n        return {\n          event: {\n            type: [0xa0],\n            descr: NOTE_AFTERTOUCH,\n            channel,\n            note: value,\n            amount: reader.uint8(),\n          },\n          deltaTime,\n        }\n      // controller\n      case 0xb0:\n        return {\n          event: {\n            type: [0xb0],\n            descr: CONTROLLER,\n            channel,\n            controllerNumber: value,\n            value: reader.uint8(),\n          },\n          deltaTime,\n        }\n      // program change\n      case 0xc0:\n        return {\n          event: {\n            type: [0xc0],\n            descr: PROGRAM_CHANGE,\n            channel,\n            program: value,\n          },\n          deltaTime,\n        }\n      // channel aftertouch\n      case 0xd0:\n        return {\n          event: {\n            type: [0xd0],\n            descr: CHANNEL_AFTERTOUCH,\n            channel,\n            amount: value,\n          },\n          deltaTime,\n        }\n      // pitch bend\n      case 0xe0:\n        return {\n          event: {\n            type: [0xe0],\n            descr: PITCH_BEND,\n            channel,\n            value: value + (reader.uint8() << 7),\n          },\n          deltaTime,\n        }\n    }\n  }\n  throw new Error(`Unrecognised MIDI event type byte: ${typeByte}`);\n}\n\nfunction getFrameRate(hourByte: number) {\n  switch (hourByte & 0b1100000) {\n    case 0x00:\n      return 24\n    case 0x20:\n      return 25\n    case 0x40:\n      return 29\n    case 0x60:\n      return 30\n    default:\n      return 0\n  }\n}","import { schedule } from './src/scheduler';\nimport { fetchArraybuffer } from './src/fetch_helpers';\nimport { parseMidiFile } from './src/parse_midi_binary';\n\nconst init = async () => {\n  const ab = await fetchArraybuffer('./assets/minute_waltz.mid');\n  const { header, tracks } = parseMidiFile(ab);\n  console.log(header);\n  console.log(tracks);\n};\n\ninit();\n"]}